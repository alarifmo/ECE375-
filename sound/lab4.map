Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
                              hd44780.o (__divmodhi4)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
                              hd44780.o (__divmodsi4)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
                              /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o) (__negsi2)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o (exit)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
                              lab4.o (__tablejump2__)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
                              lab4.o (__do_clear_bss)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o) (__udivmodsi4)

Allocating common symbols
Common symbol       size              file

notes               0x1               lab4.o
song                0x1               lab4.o
lcd_string_array    0x20              hd44780.o
max_beat            0x2               lab4.o
beat                0x2               lab4.o
lcd_str             0x10              hd44780.o
counter             0x1               lab4.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
LOAD lab4.o
LOAD hd44780.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega128.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x207c
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x000000000000008c      0x302 lab4.o
                0x000000000000038e                . = ALIGN (0x2)
                0x000000000000038e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000038e        0x0 linker stubs
 *(.trampolines*)
                0x000000000000038e                __trampolines_end = .
 *(.progmem*)
                0x000000000000038e                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000038e                __ctors_start = .
 *(.ctors)
                0x000000000000038e                __ctors_end = .
                0x000000000000038e                __dtors_start = .
 *(.dtors)
                0x000000000000038e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000038e        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
                0x000000000000038e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000038e        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000039a       0x10 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
                0x000000000000039a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000003aa        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 *(.init9)
 *(.text)
 .text          0x00000000000003b2        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
                0x00000000000003b2                __vector_22
                0x00000000000003b2                __vector_28
                0x00000000000003b2                __vector_1
                0x00000000000003b2                __vector_32
                0x00000000000003b2                __vector_34
                0x00000000000003b2                __vector_24
                0x00000000000003b2                __bad_interrupt
                0x00000000000003b2                __vector_6
                0x00000000000003b2                __vector_31
                0x00000000000003b2                __vector_3
                0x00000000000003b2                __vector_23
                0x00000000000003b2                __vector_30
                0x00000000000003b2                __vector_25
                0x00000000000003b2                __vector_11
                0x00000000000003b2                __vector_13
                0x00000000000003b2                __vector_17
                0x00000000000003b2                __vector_19
                0x00000000000003b2                __vector_7
                0x00000000000003b2                __vector_27
                0x00000000000003b2                __vector_5
                0x00000000000003b2                __vector_33
                0x00000000000003b2                __vector_4
                0x00000000000003b2                __vector_9
                0x00000000000003b2                __vector_2
                0x00000000000003b2                __vector_21
                0x00000000000003b2                __vector_15
                0x00000000000003b2                __vector_29
                0x00000000000003b2                __vector_8
                0x00000000000003b2                __vector_26
                0x00000000000003b2                __vector_14
                0x00000000000003b2                __vector_10
                0x00000000000003b2                __vector_18
                0x00000000000003b2                __vector_20
 .text          0x00000000000003b6     0x1574 lab4.o
                0x00000000000003b6                play_rest
                0x00000000000003cc                play_note
                0x0000000000000a08                song0
                0x0000000000000bd0                song1
                0x0000000000000d98                song2
                0x0000000000001710                song3
                0x00000000000017dc                play_song
                0x000000000000180a                music_off
                0x0000000000001818                music_on
                0x0000000000001830                music_init
                0x0000000000001870                __vector_16
                0x00000000000018ac                __vector_12
 .text          0x000000000000192a      0x61e hd44780.o
                0x000000000000192a                send_lcd
                0x0000000000001954                refresh_lcd
                0x00000000000019ac                set_custom_character
                0x0000000000001a0e                set_cursor
                0x0000000000001a1e                uint2lcd
                0x0000000000001a9c                int2lcd
                0x0000000000001ac4                cursor_on
                0x0000000000001acc                cursor_off
                0x0000000000001ad4                shift_right
                0x0000000000001adc                shift_left
                0x0000000000001ae4                strobe_lcd
                0x0000000000001af6                clear_display
                0x0000000000001b0c                cursor_home
                0x0000000000001b22                line2_col1
                0x0000000000001b2a                line1_col1
                0x0000000000001b32                fill_spaces
                0x0000000000001b4e                char2lcd
                0x0000000000001b56                string2lcd
                0x0000000000001ba0                lcd_init
                0x0000000000001c54                lcd_int32
                0x0000000000001dc8                lcd_int16
 .text          0x0000000000001f48        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text          0x0000000000001f48        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text          0x0000000000001f48        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text          0x0000000000001f48        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text          0x0000000000001f48        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text          0x0000000000001f48        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text          0x0000000000001f48        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000001f48        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
                0x0000000000001f48                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000001f48       0x4c lab4.o
                0x0000000000001f48                main
 .text.libgcc.mul
                0x0000000000001f94        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x0000000000001f94       0x28 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
                0x0000000000001f94                __divmodhi4
                0x0000000000001f94                _div
 .text.libgcc   0x0000000000001fbc        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x0000000000001fbc        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x0000000000001fbc        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x0000000000001fbc        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x0000000000001fbc        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x0000000000001fbc        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.div
                0x0000000000001fbc       0x2e /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
                0x0000000000001fbc                __divmodsi4
 .text.libgcc   0x0000000000001fea        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.prologue
                0x0000000000001fea        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.builtins
                0x0000000000001fea        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.fmul
                0x0000000000001fea        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.fixed
                0x0000000000001fea        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.mul
                0x0000000000001fea        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.div
                0x0000000000001fea       0x10 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
                0x0000000000001fea                __negsi2
 .text.libgcc   0x0000000000001ffa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.prologue
                0x0000000000001ffa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.builtins
                0x0000000000001ffa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.fmul
                0x0000000000001ffa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.fixed
                0x0000000000001ffa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.mul
                0x0000000000001ffa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000001ffa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000001ffa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000001ffa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000001ffa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000001ffa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000001ffa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000001ffa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.div
                0x0000000000001ffa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc   0x0000000000001ffa       0x12 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
                0x0000000000001ffa                __tablejump2__
 .text.libgcc.prologue
                0x000000000000200c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.builtins
                0x000000000000200c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.fmul
                0x000000000000200c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.fixed
                0x000000000000200c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.mul
                0x000000000000200c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x000000000000200c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x000000000000200c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x000000000000200c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x000000000000200c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x000000000000200c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x000000000000200c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x000000000000200c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x000000000000200c       0x28 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
                0x000000000000200c                __udivmodhi4
 .text.libgcc   0x0000000000002034        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000002034        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000002034        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000002034        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000002034        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000002034        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x0000000000002034       0x44 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
                0x0000000000002034                __udivmodsi4
 .text.libgcc   0x0000000000002078        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x0000000000002078        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x0000000000002078        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x0000000000002078        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x0000000000002078        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
                0x0000000000002078                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000002078        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
                0x0000000000002078                exit
                0x0000000000002078                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000002078        0x4 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x000000000000207c                _etext = .

.data           0x0000000000800100        0x0 load address 0x000000000000207c
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 .data          0x0000000000800100        0x0 lab4.o
 .data          0x0000000000800100        0x0 hd44780.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800100                . = ALIGN (0x2)
                0x0000000000800100                _edata = .
                0x0000000000800100                PROVIDE (__data_end, .)

.bss            0x0000000000800100       0x38
                0x0000000000800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 .bss           0x0000000000800100        0x0 lab4.o
 .bss           0x0000000000800100        0x1 hd44780.o
 .bss           0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .bss           0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .bss           0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .bss           0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .bss           0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800101        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800101        0x7 lab4.o
                0x0000000000800101                notes
                0x0000000000800102                song
                0x0000000000800103                max_beat
                0x0000000000800105                beat
                0x0000000000800107                counter
 COMMON         0x0000000000800108       0x30 hd44780.o
                0x0000000000800108                lcd_string_array
                0x0000000000800128                lcd_str
                0x0000000000800138                PROVIDE (__bss_end, .)
                0x000000000000207c                __data_load_start = LOADADDR (.data)
                0x000000000000207c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800138        0x0
                0x0000000000800138                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800138                PROVIDE (__noinit_end, .)
                0x0000000000800138                _end = .
                0x0000000000800138                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x3678
 *(.stab)
 .stab          0x0000000000000000     0x249c lab4.o
 .stab          0x000000000000249c     0x11dc hd44780.o
                                       0x13c8 (size before relaxing)

.stabstr        0x0000000000000000     0x11f4
 *(.stabstr)
 .stabstr       0x0000000000000000     0x11f4 lab4.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 lab4.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 hd44780.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(lab4.elf elf32-avr)
LOAD linker stubs
