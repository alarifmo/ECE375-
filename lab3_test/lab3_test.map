Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o (exit)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
                              lab3_test.o (__tablejump2__)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
                              lab3_test.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
                              lab3_test.o (__do_clear_bss)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
                              lab3_test.o (__umulhisi3)

Allocating common symbols
Common symbol       size              file

output              0x14              lab3_test.o
dec_to_7seg         0xc               lab3_test.o
segment_data        0x5               lab3_test.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
LOAD lab3_test.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega128.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xb3a
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x000000000000008c       0x64 lab3_test.o
                0x00000000000000f0                . = ALIGN (0x2)
                0x00000000000000f0                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000000000000f0        0x0 linker stubs
 *(.trampolines*)
                0x00000000000000f0                __trampolines_end = .
 *(.progmem*)
                0x00000000000000f0                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000000000000f0                __ctors_start = .
 *(.ctors)
                0x00000000000000f0                __ctors_end = .
                0x00000000000000f0                __dtors_start = .
 *(.dtors)
                0x00000000000000f0                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000000000000f0        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
                0x00000000000000f0                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000000000000f0        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000000000000fc       0x1a /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
                0x00000000000000fc                __do_copy_data
 .init4         0x0000000000000116       0x10 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
                0x0000000000000116                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000126        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 *(.init9)
 *(.text)
 .text          0x000000000000012e        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
                0x000000000000012e                __vector_22
                0x000000000000012e                __vector_28
                0x000000000000012e                __vector_1
                0x000000000000012e                __vector_32
                0x000000000000012e                __vector_34
                0x000000000000012e                __vector_24
                0x000000000000012e                __vector_12
                0x000000000000012e                __bad_interrupt
                0x000000000000012e                __vector_6
                0x000000000000012e                __vector_31
                0x000000000000012e                __vector_3
                0x000000000000012e                __vector_23
                0x000000000000012e                __vector_30
                0x000000000000012e                __vector_25
                0x000000000000012e                __vector_11
                0x000000000000012e                __vector_13
                0x000000000000012e                __vector_17
                0x000000000000012e                __vector_19
                0x000000000000012e                __vector_7
                0x000000000000012e                __vector_27
                0x000000000000012e                __vector_5
                0x000000000000012e                __vector_33
                0x000000000000012e                __vector_4
                0x000000000000012e                __vector_9
                0x000000000000012e                __vector_2
                0x000000000000012e                __vector_21
                0x000000000000012e                __vector_15
                0x000000000000012e                __vector_29
                0x000000000000012e                __vector_8
                0x000000000000012e                __vector_26
                0x000000000000012e                __vector_14
                0x000000000000012e                __vector_10
                0x000000000000012e                __vector_18
                0x000000000000012e                __vector_20
 .text          0x0000000000000132      0x97e lab3_test.o
                0x0000000000000132                SET_DIGIT_ONE
                0x000000000000013c                SET_DIGIT_TWO
                0x0000000000000146                SET_DIGIT_THREE
                0x0000000000000150                SET_DIGIT_FOUR
                0x0000000000000158                ENABLE_BUFFER
                0x0000000000000160                ENABLE_LED_CONTROL
                0x0000000000000170                ENABLE_BUTTON_READ
                0x0000000000000178                ENC_CLK_ENABLE
                0x000000000000017c                ENC_CLK_DISABLE
                0x0000000000000180                ENC_PARALLEL_ENABLE
                0x0000000000000184                ENC_PARALLEL_DISABLE
                0x0000000000000188                ENC_L_COUNTUP
                0x00000000000001de                ENC_L_COUNTDOWN
                0x0000000000000234                ENC_R_COUNTUP
                0x000000000000028a                ENC_R_COUNTDOWN
                0x00000000000002e0                configureIO
                0x0000000000000330                configureTimers
                0x000000000000033e                configureSPI
                0x0000000000000344                setSegment
                0x0000000000000390                clearSegment
                0x0000000000000396                setDigit
                0x00000000000004bc                processButtonPress
                0x00000000000004f8                processCounterOutput
                0x000000000000069c                checkButtons
                0x0000000000000738                updateSPI
                0x0000000000000760                processEncoders
                0x00000000000008fe                __vector_16
                0x0000000000000a04                incrementCounter
                0x0000000000000a5a                decrementCounter
 .text          0x0000000000000ab0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text          0x0000000000000ab0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text          0x0000000000000ab0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text          0x0000000000000ab0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text          0x0000000000000ab0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
                0x0000000000000ab0                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000ab0       0x56 lab3_test.o
                0x0000000000000ab0                main
 .text.libgcc.mul
                0x0000000000000b06        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000b06        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000b06        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000b06        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000b06        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000b06        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000b06        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000b06        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.div
                0x0000000000000b06        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc   0x0000000000000b06       0x12 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
                0x0000000000000b06                __tablejump2__
 .text.libgcc.prologue
                0x0000000000000b18        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.builtins
                0x0000000000000b18        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.fmul
                0x0000000000000b18        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.fixed
                0x0000000000000b18        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.mul
                0x0000000000000b18        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000b18        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000b18        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000b18        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000b18        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000b18        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000b18        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000b18        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000b18        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000b18        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000b18        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000b18        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000b18        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000b18        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000b18       0x1e /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
                0x0000000000000b18                __umulhisi3
 .text.libgcc.div
                0x0000000000000b36        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x0000000000000b36        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x0000000000000b36        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x0000000000000b36        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x0000000000000b36        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x0000000000000b36        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
                0x0000000000000b36                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000b36        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
                0x0000000000000b36                exit
                0x0000000000000b36                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000b36        0x4 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000b3a                _etext = .

.data           0x0000000000800100        0x2 load address 0x0000000000000b3a
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 .data          0x0000000000800100        0x2 lab3_test.o
                0x0000000000800100                lastEncoderValue
                0x0000000000800101                unpressed
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800102        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800102                . = ALIGN (0x2)
                0x0000000000800102                _edata = .
                0x0000000000800102                PROVIDE (__data_end, .)

.bss            0x0000000000800102       0x34
                0x0000000000800102                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800102        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 .bss           0x0000000000800102        0xf lab3_test.o
                0x0000000000800102                bargraphOutput
                0x0000000000800103                upToDateEncoderValue
                0x0000000000800104                debounceCounter
                0x0000000000800106                lastEntered
                0x0000000000800108                inc4Bool
                0x0000000000800109                inc2Bool
                0x000000000080010a                randoTest
                0x000000000080010b                counter
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800111        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800111       0x25 lab3_test.o
                0x0000000000800111                output
                0x0000000000800125                dec_to_7seg
                0x0000000000800131                segment_data
                0x0000000000800136                PROVIDE (__bss_end, .)
                0x0000000000000b3a                __data_load_start = LOADADDR (.data)
                0x0000000000000b3c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800136        0x0
                0x0000000000800136                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800136                PROVIDE (__noinit_end, .)
                0x0000000000800136                _end = .
                0x0000000000800136                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x192c
 *(.stab)
 .stab          0x0000000000000000     0x192c lab3_test.o

.stabstr        0x0000000000000000     0x109d
 *(.stabstr)
 .stabstr       0x0000000000000000     0x109d lab3_test.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 lab3_test.o
                                         0x12 (size before relaxing)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(lab3_test.elf elf32-avr)
LOAD linker stubs
