Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
                              stim_timer_skel.o (__divmodhi4)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
                              stim_timer_skel.o (__udivmodsi4)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
                              hd44780.o (__divmodsi4)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
                              /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o) (__negsi2)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o (exit)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
                              stim_timer_skel.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
                              hd44780.o (__do_clear_bss)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(rand.o)
                              stim_timer_skel.o (rand)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_muluhisi3.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(rand.o) (__muluhisi3)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_mulshisi3.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(rand.o) (__mulohisi3)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
                              /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_muluhisi3.o) (__umulhisi3)

Allocating common symbols
Common symbol       size              file

lcd_string_array    0x20              hd44780.o
lcd_str             0x10              hd44780.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
LOAD stim_timer_skel.o
LOAD hd44780.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega128.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xace
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x000000000000008c                . = ALIGN (0x2)
                0x000000000000008c                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000008c        0x0 linker stubs
 *(.trampolines*)
                0x000000000000008c                __trampolines_end = .
 *(.progmem*)
                0x000000000000008c                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000008c                __ctors_start = .
 *(.ctors)
                0x000000000000008c                __ctors_end = .
                0x000000000000008c                __dtors_start = .
 *(.dtors)
                0x000000000000008c                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000008c        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
                0x000000000000008c                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000008c        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000098       0x1a /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
                0x0000000000000098                __do_copy_data
 .init4         0x00000000000000b2       0x10 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
                0x00000000000000b2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000000000000c2        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 *(.init9)
 *(.text)
 .text          0x00000000000000ca        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
                0x00000000000000ca                __vector_22
                0x00000000000000ca                __vector_28
                0x00000000000000ca                __vector_1
                0x00000000000000ca                __vector_32
                0x00000000000000ca                __vector_34
                0x00000000000000ca                __vector_24
                0x00000000000000ca                __vector_12
                0x00000000000000ca                __bad_interrupt
                0x00000000000000ca                __vector_6
                0x00000000000000ca                __vector_31
                0x00000000000000ca                __vector_3
                0x00000000000000ca                __vector_23
                0x00000000000000ca                __vector_30
                0x00000000000000ca                __vector_25
                0x00000000000000ca                __vector_11
                0x00000000000000ca                __vector_13
                0x00000000000000ca                __vector_17
                0x00000000000000ca                __vector_19
                0x00000000000000ca                __vector_7
                0x00000000000000ca                __vector_27
                0x00000000000000ca                __vector_5
                0x00000000000000ca                __vector_33
                0x00000000000000ca                __vector_4
                0x00000000000000ca                __vector_9
                0x00000000000000ca                __vector_2
                0x00000000000000ca                __vector_21
                0x00000000000000ca                __vector_15
                0x00000000000000ca                __vector_29
                0x00000000000000ca                __vector_8
                0x00000000000000ca                __vector_26
                0x00000000000000ca                __vector_14
                0x00000000000000ca                __vector_10
                0x00000000000000ca                __vector_16
                0x00000000000000ca                __vector_18
                0x00000000000000ca                __vector_20
 .text          0x00000000000000ce       0x10 stim_timer_skel.o
                0x00000000000000ce                spi_init
 .text          0x00000000000000de      0x642 hd44780.o
                0x00000000000000de                send_lcd
                0x0000000000000108                refresh_lcd
                0x000000000000016e                set_custom_character
                0x00000000000001d0                set_cursor
                0x00000000000001e0                uint2lcd
                0x000000000000025e                int2lcd
                0x0000000000000286                cursor_on
                0x000000000000028e                cursor_off
                0x0000000000000296                shift_right
                0x000000000000029e                shift_left
                0x00000000000002a6                strobe_lcd
                0x00000000000002b8                clear_display
                0x00000000000002ce                cursor_home
                0x00000000000002e4                line2_col1
                0x00000000000002f6                line1_col1
                0x0000000000000308                fill_spaces
                0x0000000000000324                char2lcd
                0x000000000000032c                string2lcd
                0x0000000000000376                lcd_init
                0x000000000000042a                lcd_int32
                0x000000000000059e                lcd_int16
 .text          0x0000000000000720        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000720        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text          0x0000000000000720        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text          0x0000000000000720        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text          0x0000000000000720        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text          0x0000000000000720        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text          0x0000000000000720        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text          0x0000000000000720        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000720        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(rand.o)
 .text          0x0000000000000720        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_muluhisi3.o)
 .text          0x0000000000000720        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_mulshisi3.o)
 .text          0x0000000000000720        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
                0x0000000000000720                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000720      0x1e0 stim_timer_skel.o
                0x0000000000000720                main
 .text.libgcc.mul
                0x0000000000000900        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x0000000000000900       0x28 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
                0x0000000000000900                __divmodhi4
                0x0000000000000900                _div
 .text.libgcc   0x0000000000000928        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000928        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000928        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000928        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000928        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x0000000000000928        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x0000000000000928       0x44 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
                0x0000000000000928                __udivmodsi4
 .text.libgcc   0x000000000000096c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x000000000000096c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x000000000000096c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x000000000000096c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x000000000000096c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.mul
                0x000000000000096c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.div
                0x000000000000096c       0x2e /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
                0x000000000000096c                __divmodsi4
 .text.libgcc   0x000000000000099a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.prologue
                0x000000000000099a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.builtins
                0x000000000000099a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.fmul
                0x000000000000099a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.fixed
                0x000000000000099a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.mul
                0x000000000000099a        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.div
                0x000000000000099a       0x10 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
                0x000000000000099a                __negsi2
 .text.libgcc   0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.prologue
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.builtins
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.fmul
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.fixed
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.mul
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x00000000000009aa        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x00000000000009aa       0x28 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
                0x00000000000009aa                __udivmodhi4
 .text.libgcc   0x00000000000009d2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x00000000000009d2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x00000000000009d2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x00000000000009d2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x00000000000009d2        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.avr-libc
                0x00000000000009d2       0xb4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(rand.o)
                0x0000000000000a64                rand_r
                0x0000000000000a68                rand
                0x0000000000000a70                srand
 .text.libgcc.mul
                0x0000000000000a86       0x16 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_muluhisi3.o)
                0x0000000000000a86                __muluhisi3
 .text.libgcc.div
                0x0000000000000a9c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_muluhisi3.o)
 .text.libgcc   0x0000000000000a9c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_muluhisi3.o)
 .text.libgcc.prologue
                0x0000000000000a9c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_muluhisi3.o)
 .text.libgcc.builtins
                0x0000000000000a9c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_muluhisi3.o)
 .text.libgcc.fmul
                0x0000000000000a9c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_muluhisi3.o)
 .text.libgcc.fixed
                0x0000000000000a9c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_muluhisi3.o)
 .text.libgcc.mul
                0x0000000000000a9c       0x10 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_mulshisi3.o)
                0x0000000000000a9c                __mulshisi3
                0x0000000000000aa2                __mulohisi3
 .text.libgcc.div
                0x0000000000000aac        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_mulshisi3.o)
 .text.libgcc   0x0000000000000aac        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_mulshisi3.o)
 .text.libgcc.prologue
                0x0000000000000aac        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_mulshisi3.o)
 .text.libgcc.builtins
                0x0000000000000aac        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_mulshisi3.o)
 .text.libgcc.fmul
                0x0000000000000aac        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_mulshisi3.o)
 .text.libgcc.fixed
                0x0000000000000aac        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_mulshisi3.o)
 .text.libgcc.mul
                0x0000000000000aac       0x1e /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
                0x0000000000000aac                __umulhisi3
 .text.libgcc.div
                0x0000000000000aca        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x0000000000000aca        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x0000000000000aca        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x0000000000000aca        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x0000000000000aca        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x0000000000000aca        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
                0x0000000000000aca                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000aca        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
                0x0000000000000aca                exit
                0x0000000000000aca                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000aca        0x4 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000ace                _etext = .

.data           0x0000000000800100       0x7a load address 0x0000000000000ace
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 .data          0x0000000000800100        0x0 stim_timer_skel.o
 .data          0x0000000000800100        0x0 hd44780.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800100        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(rand.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_muluhisi3.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_mulshisi3.o)
 .data          0x0000000000800104        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800104       0x75 stim_timer_skel.o
 *(.gnu.linkonce.d*)
                0x000000000080017a                . = ALIGN (0x2)
 *fill*         0x0000000000800179        0x1 
                0x000000000080017a                _edata = .
                0x000000000080017a                PROVIDE (__data_end, .)

.bss            0x000000000080017a       0x31
                0x000000000080017a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080017a        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 .bss           0x000000000080017a        0x0 stim_timer_skel.o
 .bss           0x000000000080017a        0x1 hd44780.o
 .bss           0x000000000080017b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .bss           0x000000000080017b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .bss           0x000000000080017b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .bss           0x000000000080017b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .bss           0x000000000080017b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .bss           0x000000000080017b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .bss           0x000000000080017b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .bss           0x000000000080017b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .bss           0x000000000080017b        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(rand.o)
 .bss           0x000000000080017b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_muluhisi3.o)
 .bss           0x000000000080017b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_mulshisi3.o)
 .bss           0x000000000080017b        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_umulhisi3.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x000000000080017b       0x30 hd44780.o
                0x000000000080017b                lcd_string_array
                0x000000000080019b                lcd_str
                0x00000000008001ab                PROVIDE (__bss_end, .)
                0x0000000000000ace                __data_load_start = LOADADDR (.data)
                0x0000000000000b48                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008001ab        0x0
                0x00000000008001ab                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008001ab                PROVIDE (__noinit_end, .)
                0x00000000008001ab                _end = .
                0x00000000008001ab                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x1bc0
 *(.stab)
 .stab          0x0000000000000000      0x960 stim_timer_skel.o
 .stab          0x0000000000000960     0x1260 hd44780.o
                                       0x1458 (size before relaxing)

.stabstr        0x0000000000000000     0x10e0
 *(.stabstr)
 .stabstr       0x0000000000000000     0x10e0 stim_timer_skel.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 stim_timer_skel.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 hd44780.o
 .comment       0x0000000000000011       0x12 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(rand.o)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(stim_timer_skel.elf elf32-avr)
LOAD linker stubs
