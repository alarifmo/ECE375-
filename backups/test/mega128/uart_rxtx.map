Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
                              uart_rxtx.o (__divmodhi4)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
                              hd44780.o (__divmodsi4)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
                              /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o) (__negsi2)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o (exit)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
                              twi_master.o (__tablejump2__)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
                              uart_rxtx.o (__do_copy_data)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
                              uart_rxtx.o (__do_clear_bss)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
                              /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o) (__udivmodsi4)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
                              uart_rxtx.o (__itoa_ncheck)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(itoa_ncheck.o) (__utoa_common)
/usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(strrev.o)
                              /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(utoa_ncheck.o) (strrev)

Allocating common symbols
Common symbol       size              file

rcv_rdy             0x1               uart_rxtx.o
uart_tx_buf         0x28              uart_functions.o
twi_state           0x1               twi_master.o
twi_buf             0x2               twi_master.o
uart1_tx_buf        0x28              uart_functions.o
lcd_string_array    0x20              hd44780.o
lm73_wr_buf         0x2               lm73_functions.o
lm73_temp           0x2               uart_rxtx.o
twi_bus_addr        0x1               twi_master.o
lcd_str_l           0x5               uart_rxtx.o
i                   0x1               uart_rxtx.o
lcd_str             0x10              hd44780.o
lcd_string          0x3               uart_rxtx.o
twi_msg_size        0x1               twi_master.o
uart1_rx_buf        0x28              uart_functions.o
lcd_str_array       0x5               uart_rxtx.o
fp_low_result       0x4               uart_rxtx.o
lm73_rd_buf         0x2               lm73_functions.o
uart_rx_buf         0x28              uart_functions.o
lcd_str_h           0x5               uart_rxtx.o
rx_char             0x1               uart_rxtx.o
fp_adc_result       0x4               uart_rxtx.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800100 0x000000000000ff00 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
LOAD uart_rxtx.o
LOAD uart_functions.o
LOAD hd44780.o
LOAD lm73_functions.o
LOAD twi_master.o
START GROUP
LOAD /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libm.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a
LOAD /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libatmega128.a
END GROUP

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xd0a
 *(.vectors)
 .vectors       0x0000000000000000       0x8c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x000000000000008c       0xa2 twi_master.o
                0x000000000000012e                . = ALIGN (0x2)
                0x000000000000012e                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000000000012e        0x0 linker stubs
 *(.trampolines*)
                0x000000000000012e                __trampolines_end = .
 *(.progmem*)
                0x000000000000012e                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000000000012e                __ctors_start = .
 *(.ctors)
                0x000000000000012e                __ctors_end = .
                0x000000000000012e                __dtors_start = .
 *(.dtors)
                0x000000000000012e                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000000000012e        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
                0x000000000000012e                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000000000012e        0xc /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000013a       0x1a /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
                0x000000000000013a                __do_copy_data
 .init4         0x0000000000000154       0x10 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
                0x0000000000000154                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000164        0x8 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 *(.init9)
 *(.text)
 .text          0x000000000000016c        0x4 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
                0x000000000000016c                __vector_22
                0x000000000000016c                __vector_28
                0x000000000000016c                __vector_1
                0x000000000000016c                __vector_32
                0x000000000000016c                __vector_34
                0x000000000000016c                __vector_24
                0x000000000000016c                __vector_12
                0x000000000000016c                __bad_interrupt
                0x000000000000016c                __vector_6
                0x000000000000016c                __vector_31
                0x000000000000016c                __vector_3
                0x000000000000016c                __vector_23
                0x000000000000016c                __vector_30
                0x000000000000016c                __vector_25
                0x000000000000016c                __vector_11
                0x000000000000016c                __vector_13
                0x000000000000016c                __vector_17
                0x000000000000016c                __vector_19
                0x000000000000016c                __vector_7
                0x000000000000016c                __vector_27
                0x000000000000016c                __vector_5
                0x000000000000016c                __vector_4
                0x000000000000016c                __vector_9
                0x000000000000016c                __vector_2
                0x000000000000016c                __vector_21
                0x000000000000016c                __vector_15
                0x000000000000016c                __vector_29
                0x000000000000016c                __vector_8
                0x000000000000016c                __vector_26
                0x000000000000016c                __vector_14
                0x000000000000016c                __vector_10
                0x000000000000016c                __vector_16
                0x000000000000016c                __vector_20
 .text          0x0000000000000170      0x156 uart_rxtx.o
                0x0000000000000170                spi_init
                0x0000000000000180                get_48
                0x00000000000001c0                get_128
                0x000000000000026a                __vector_18
 .text          0x00000000000002c6       0xf6 uart_functions.o
                0x00000000000002c6                uart_putc
                0x00000000000002d2                uart1_putc
                0x00000000000002e8                uart_puts
                0x0000000000000304                uart1_puts
                0x000000000000032a                uart_puts_p
                0x0000000000000350                uart_init
                0x000000000000036a                uart1_init
                0x000000000000038a                uart_getc
                0x00000000000003a0                uart1_getc
 .text          0x00000000000003bc      0x620 hd44780.o
                0x00000000000003bc                send_lcd
                0x00000000000003e6                refresh_lcd
                0x000000000000043c                set_custom_character
                0x000000000000049e                set_cursor
                0x00000000000004ae                uint2lcd
                0x000000000000052c                int2lcd
                0x0000000000000554                cursor_on
                0x000000000000055c                cursor_off
                0x0000000000000564                shift_right
                0x000000000000056c                shift_left
                0x0000000000000574                strobe_lcd
                0x0000000000000586                clear_display
                0x000000000000059c                cursor_home
                0x00000000000005b2                line2_col1
                0x00000000000005ba                line1_col1
                0x00000000000005c2                fill_spaces
                0x00000000000005de                char2lcd
                0x00000000000005e6                string2lcd
                0x0000000000000634                lcd_init
                0x00000000000006e8                lcd_int32
                0x000000000000085c                lcd_int16
 .text          0x00000000000009dc        0x0 lm73_functions.o
 .text          0x00000000000009dc      0x17c twi_master.o
                0x00000000000009dc                __vector_33
                0x0000000000000afa                twi_busy
                0x0000000000000b02                twi_start_wr
                0x0000000000000b24                twi_start_rd
                0x0000000000000b46                init_twi
 .text          0x0000000000000b58        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text          0x0000000000000b58        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text          0x0000000000000b58        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text          0x0000000000000b58        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text          0x0000000000000b58        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text          0x0000000000000b58        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text          0x0000000000000b58        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text          0x0000000000000b58        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text          0x0000000000000b58        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text          0x0000000000000b58        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
 .text          0x0000000000000b58        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
 .text          0x0000000000000b58        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(strrev.o)
                0x0000000000000b58                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000b58       0x60 uart_rxtx.o
                0x0000000000000b58                main
 .text.libgcc.mul
                0x0000000000000bb8        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.div
                0x0000000000000bb8       0x28 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
                0x0000000000000bb8                __divmodhi4
                0x0000000000000bb8                _div
 .text.libgcc   0x0000000000000be0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .text.libgcc.mul
                0x0000000000000be0        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.div
                0x0000000000000be0       0x2e /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
                0x0000000000000be0                __divmodsi4
 .text.libgcc   0x0000000000000c0e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000c0e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000c0e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000c0e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.fixed
                0x0000000000000c0e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .text.libgcc.mul
                0x0000000000000c0e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.div
                0x0000000000000c0e       0x10 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
                0x0000000000000c0e                __negsi2
 .text.libgcc   0x0000000000000c1e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.prologue
                0x0000000000000c1e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.builtins
                0x0000000000000c1e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.fmul
                0x0000000000000c1e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.fixed
                0x0000000000000c1e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .text.libgcc.mul
                0x0000000000000c1e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.div
                0x0000000000000c1e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000c1e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x0000000000000c1e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x0000000000000c1e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x0000000000000c1e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x0000000000000c1e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x0000000000000c1e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.div
                0x0000000000000c1e        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc   0x0000000000000c1e       0x12 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
                0x0000000000000c1e                __tablejump2__
 .text.libgcc.prologue
                0x0000000000000c30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.builtins
                0x0000000000000c30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.fmul
                0x0000000000000c30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.fixed
                0x0000000000000c30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .text.libgcc.mul
                0x0000000000000c30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x0000000000000c30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc   0x0000000000000c30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x0000000000000c30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x0000000000000c30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x0000000000000c30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x0000000000000c30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x0000000000000c30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x0000000000000c30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc   0x0000000000000c30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x0000000000000c30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x0000000000000c30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x0000000000000c30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x0000000000000c30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .text.libgcc.mul
                0x0000000000000c30        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.div
                0x0000000000000c30       0x28 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
                0x0000000000000c30                __udivmodhi4
 .text.libgcc   0x0000000000000c58        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.prologue
                0x0000000000000c58        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.builtins
                0x0000000000000c58        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fmul
                0x0000000000000c58        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.fixed
                0x0000000000000c58        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .text.libgcc.mul
                0x0000000000000c58        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.div
                0x0000000000000c58       0x44 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
                0x0000000000000c58                __udivmodsi4
 .text.libgcc   0x0000000000000c9c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.prologue
                0x0000000000000c9c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.builtins
                0x0000000000000c9c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fmul
                0x0000000000000c9c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.libgcc.fixed
                0x0000000000000c9c        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .text.avr-libc
                0x0000000000000c9c       0x16 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
                0x0000000000000c9c                __itoa_ncheck
 .text.avr-libc
                0x0000000000000cb2       0x34 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
                0x0000000000000cb2                __utoa_ncheck
                0x0000000000000cb4                __utoa_common
 .text.avr-libc
                0x0000000000000ce6       0x20 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(strrev.o)
                0x0000000000000ce6                strrev
                0x0000000000000d06                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000d06        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
                0x0000000000000d06                exit
                0x0000000000000d06                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000d06        0x4 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000d0a                _etext = .

.data           0x0000000000800100        0x4 load address 0x0000000000000d0a
                0x0000000000800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 .data          0x0000000000800100        0x0 uart_rxtx.o
 .data          0x0000000000800100        0x0 uart_functions.o
 .data          0x0000000000800100        0x0 hd44780.o
 .data          0x0000000000800100        0x0 lm73_functions.o
 .data          0x0000000000800100        0x0 twi_master.o
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
 .data          0x0000000000800100        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(strrev.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800100        0x4 uart_rxtx.o
 *(.gnu.linkonce.d*)
                0x0000000000800104                . = ALIGN (0x2)
                0x0000000000800104                _edata = .
                0x0000000000800104                PROVIDE (__data_end, .)

.bss            0x0000000000800104       0xfc
                0x0000000000800104                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800104        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o
 .bss           0x0000000000800104        0x2 uart_rxtx.o
                0x0000000000800104                send_seq
 .bss           0x0000000000800106        0x0 uart_functions.o
 .bss           0x0000000000800106        0x1 hd44780.o
 .bss           0x0000000000800107        0x0 lm73_functions.o
 .bss           0x0000000000800107        0x1 twi_master.o
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodhi4.o)
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_divmodsi4.o)
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_negsi2.o)
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_exit.o)
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_tablejump2.o)
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_copy_data.o)
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodhi4.o)
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/4.9.2/avr51/libgcc.a(_udivmodsi4.o)
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(itoa_ncheck.o)
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(utoa_ncheck.o)
 .bss           0x0000000000800108        0x0 /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x0000000000800108       0x1f uart_rxtx.o
                0x0000000000800108                rcv_rdy
                0x0000000000800109                lm73_temp
                0x000000000080010b                lcd_str_l
                0x0000000000800110                i
                0x0000000000800111                lcd_string
                0x0000000000800114                lcd_str_array
                0x0000000000800119                fp_low_result
                0x000000000080011d                lcd_str_h
                0x0000000000800122                rx_char
                0x0000000000800123                fp_adc_result
 COMMON         0x0000000000800127       0xa0 uart_functions.o
                0x0000000000800127                uart_tx_buf
                0x000000000080014f                uart1_tx_buf
                0x0000000000800177                uart1_rx_buf
                0x000000000080019f                uart_rx_buf
 COMMON         0x00000000008001c7       0x30 hd44780.o
                0x00000000008001c7                lcd_string_array
                0x00000000008001e7                lcd_str
 COMMON         0x00000000008001f7        0x4 lm73_functions.o
                0x00000000008001f7                lm73_wr_buf
                0x00000000008001f9                lm73_rd_buf
 COMMON         0x00000000008001fb        0x5 twi_master.o
                0x00000000008001fb                twi_state
                0x00000000008001fc                twi_buf
                0x00000000008001fe                twi_bus_addr
                0x00000000008001ff                twi_msg_size
                0x0000000000800200                PROVIDE (__bss_end, .)
                0x0000000000000d0a                __data_load_start = LOADADDR (.data)
                0x0000000000000d0e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800200        0x0
                0x0000000000800200                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800200                PROVIDE (__noinit_end, .)
                0x0000000000800200                _end = .
                0x0000000000800200                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000     0x2c88
 *(.stab)
 .stab          0x0000000000000000      0x9a8 uart_rxtx.o
 .stab          0x00000000000009a8      0x7d4 uart_functions.o
                                        0x9f0 (size before relaxing)
 .stab          0x000000000000117c     0x11d0 hd44780.o
                                       0x13c8 (size before relaxing)
 .stab          0x000000000000234c      0x2dc lm73_functions.o
                                        0x4a4 (size before relaxing)
 .stab          0x0000000000002628      0x660 twi_master.o
                                        0x87c (size before relaxing)

.stabstr        0x0000000000000000     0x154f
 *(.stabstr)
 .stabstr       0x0000000000000000     0x154f uart_rxtx.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 uart_rxtx.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 uart_functions.o
 .comment       0x0000000000000011       0x12 hd44780.o
 .comment       0x0000000000000011       0x12 lm73_functions.o
 .comment       0x0000000000000011       0x12 twi_master.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/4.9.2/../../../avr/lib/avr51/crtatmega128.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info .gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line .debug_line.* .debug_line_end)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(uart_rxtx.elf elf32-avr)
LOAD linker stubs
